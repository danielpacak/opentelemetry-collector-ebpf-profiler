---
apiVersion: v1
kind: Namespace
metadata:
  name: node-agent
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-agent
  namespace: node-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: node-agent-watch-workloads
rules:
  - apiGroups: [ "" ]
    resources: [ "pods", "namespaces" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [ "apps"]
    resources: [ "replicasets", "deployments"]
    verbs: [ "get", "watch", "list" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: node-agent-can-watch-workloads
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: node-agent-watch-workloads
subjects:
  - kind: ServiceAccount
    name: node-agent
    namespace: node-agent
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: collector
  namespace: node-agent
data:
  config.yaml: |
    receivers:
      profiling:
        Tracers: all
        SamplesPerSecond: 20

    processors:
      customprofilesprocessor:
        foo: "bar"
      k8sattributes:
        wait_for_metadata: true
        wait_for_metadata_timeout: 10s
        auth_type: "serviceAccount"
        passthrough: false
        filter:
          node_from_env_var: KUBERNETES_NODE_NAME
        extract:
          metadata:
            - k8s.cluster.uid
            - k8s.node.name
            - k8s.pod.uid
            - k8s.pod.name
            - k8s.container.name
            - k8s.deployment.name
            - k8s.namespace.name
            - service.namespace
            - service.name
            - service.version
            - service.instance.id
            - container.image.name
            - container.image.tag
            - container.image.repo_digests
          otel_annotations: true
        pod_association:
          - sources:
              - from: resource_attribute
                name: container.id

    exporters:
      debug:
        verbosity: normal
      customprofilesexporter:
        ignore_profiles_without_container_id: true
        export_resource_attributes: true
        export_profile_attributes: true
        export_sample_attributes: true
        export_stack_frames: true
        export_stack_frame_types:
          - native
          - kernel
          - go
          - jvm
          - cpython
          - php
        export_function_file: false

    service:
      pipelines:
        profiles:
          receivers:
            - profiling
          processors:
            - k8sattributes
            - customprofilesprocessor
          exporters:
            - customprofilesexporter
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: collector-ebpf-profiler
  namespace: node-agent
spec:
  selector:
    matchLabels:
      name: collector-ebpf-profiler
  template:
    metadata:
      labels:
        name: collector-ebpf-profiler
    spec:
      serviceAccountName: node-agent
      hostPID: true
      containers:
        - name: profiler
          # image: docker.io/danielpacak/opentelemetry-collector-ebpf-profiler:latest
          # imagePullPolicy: IfNotPresent
          image: docker.io/danielpacak/opentelemetry-collector-ebpf-profiler:v0.134.0
          imagePullPolicy: Always
          args:
            - --config=/etc/collector/config.yaml
            - --feature-gates=service.profilesSupport
          env:
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 100m
              memory: 500Mi
            limits:
              cpu: 100m
              memory: 500Mi
          volumeMounts:
            - name: config
              mountPath: /etc/collector
            - name: debugfs
              mountPath: /sys/kernel/debug
              readOnly: true
            - name: cgroupfs
              mountPath: /sys/fs/cgroup
              readOnly: true
            - name: procfs
              mountPath: /proc
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: collector
        - name: debugfs
          hostPath:
            path: /sys/kernel/debug
        - name: cgroupfs
          hostPath:
            path: /sys/fs/cgroup
        - name: procfs
          hostPath:
            path: /proc
